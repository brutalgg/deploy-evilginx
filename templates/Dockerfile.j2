# {{ ansible_managed }}
# Base image with specific version
FROM golang:1.22-alpine AS builder

# Build arguments
ARG BUILD_RFC3339="1970-01-01T00:00:00Z"
ARG COMMIT="local"
ARG VERSION="{{ evilginx_version }}"
ARG VCS_REF

# Environment variables
ENV GITHUB_USER="kgretzky"
ENV EVILGINX_REPOSITORY="github.com/${GITHUB_USER}/evilginx2"
ENV INSTALL_PACKAGES="git make gcc musl-dev go"
ENV PROJECT_DIR="${GOPATH}/src/${EVILGINX_REPOSITORY}"
ENV EVILGINX_BIN="/bin/evilginx"

# Create project directory and install required packages
RUN mkdir -p ${GOPATH}/src/github.com/${GITHUB_USER} \
    && apk add --no-cache ${INSTALL_PACKAGES} \
    && git -C ${GOPATH}/src/github.com/${GITHUB_USER} clone --branch ${VERSION} --single-branch https://github.com/${GITHUB_USER}/evilginx2 

WORKDIR ${PROJECT_DIR}
# Build the project
RUN set -ex\
    && go get ./...\
    && make\
    && cp ${PROJECT_DIR}/build/evilginx ${EVILGINX_BIN}

# Final image
FROM alpine:latest

ENV EVILGINX_BIN="/bin/evilginx"

# Copy the built binary from the builder stage
COPY --from=builder ${EVILGINX_BIN} ${EVILGINX_BIN}

# Copy entrypoint script
COPY ./docker-entrypoint.sh /opt/
RUN chmod +x /opt/docker-entrypoint.sh

# Set entrypoint and expose port
ENTRYPOINT ["/opt/docker-entrypoint.sh"]
EXPOSE 443

# Signal configuration
STOPSIGNAL SIGKILL
